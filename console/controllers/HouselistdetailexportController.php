<?php
namespace console\controllers;

use backend\controllers\TravelHigoManageController;
use backend\controllers\HouseDetailsController;
use backend\service\CommonService;

use Yii;

use \Exception;
use console\lib\CSVIterator;

date_default_timezone_set('PRC');

//设置不超时
set_time_limit(0);
//设置最大内存
ini_set('memory_limit','2048M');

/**
 * 2017-08-10 导出房源列表详情数据以及对应房源ID为组的图片
 * Class HouselistdetailexportController
 * @package console\controllers
 */
class HouselistdetailexportController extends \yii\console\Controller
{

    static private $_exportHouseDetailImgsRedisKey = 'exportHouseDetailImgs';

    //导入csv数据处理时,foreach循环的异常捕获处理
    static private $_importCsvForeachExceptions = [];

    //以csv文件名为分组目录,存储房源详情txt文件
    static private $_csvFileGroupDirForHouseDetailTxt = '';

    //房源csv文件存储目录路径
    static private function _houseCsvSaveDirPath($subDir=''){
        $dir = Yii::$app->runtimePath.'/importcsvbyhouselist/';
        if( !is_dir($dir) ){
            throw new Exception('the_importcsvbyhouselist_dir_not_found');
        }

        if( !empty($subDir) ){
            $subDir = rtrim($subDir,'/').'/';
        }
        $dir .= $subDir;

        //递归创建
        if( !is_dir($dir) ){
            @mkdir($dir,0777,true);
            @chmod($dir,0777);
        }
        return $dir;
    }

    static private function _db(){
        static $db = null;
        if( !isset($db) ){
            $db = Yii::$app->db_export;
        }
        return $db;
    }

    static private function _redis(){
        static $redis = null;
        if( !isset($redis) ){
            $redis = Yii::$app->redis;
        }
        return $redis;
    }

    public function beforeAction($action)
    {
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    //~~~建议针对性处理某个文件,暂时未考虑多文件处理~~~
    //执行步骤:
    //   1.必须先执行第一步1.0,即actionExporthousedetails方法,处理房源详情数据后,会将房源的图片做一个hash处理存储到redis中
    //      命令行调用示例:/data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/exporthousedetails

    //   2.然后再执行第二部2.0,即actionExporthousedetailimgs方法,处理房源图片下载的逻辑
    //      命令行调用示例: /data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/exporthousedetailimgs

    //第一步 1.0
    //读取带有房源ID列表的csv文件,导出对应的房源详情信息文件,注:csv文件的名称不能以-拼接,否则会出现远程图片下载完成后存储路径的问题
    //命令行调用示例: /data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/exporthousedetails
    /**
     * @param string $csvFileName 要针对某个csv文件处理,此时只会处理这一个csv文件,而不管该csv文件同级目录下的所有其他csv文件
     * @demo
     *      针对某个csv文件处理时的命令行调用示例:
     *      /data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/exporthousedetails hangzhou_houseList_ttg_2017.8.9
     */
    public function actionExporthousedetails($csvFileName=''){
        try{
            $res = [
                'fileTotal' => 0,
                'fileList'  => [],
            ];
            //获取csv文件保存的路径,注意:这里的保存完整路径是console/runtime/importcsvbyhouselist目录下,注意要先创建个importcsvbyhouselist目录存储这些.csv文件
            //保存完整路径示例:/data/nginx/html/php_tglj/admin/console/runtime/importcsvbyhouselist/a.csv
            $csvSavePath    = self::_houseCsvSaveDirPath().'*.csv';
            if( !empty($csvFileName) ){
                $csvSavePath    = self::_houseCsvSaveDirPath()."{$csvFileName}.csv";
                //如果有自定义的csv文件处理,则redis存储时,也以该csv文件区分
                self::$_exportHouseDetailImgsRedisKey .= "-{$csvFileName}";
            }

            $csvList        = glob($csvSavePath);
            if( empty($csvList) ){
                throw new Exception('the_csvSavePath_csvList_empty');
            }

            //导入csv程序处理---start
            $csvHead = [
                '房源ID'  => 'house_id',
                //@todo 这里列出标题是测试中文汉字的gb2312转utf的处理是否正确
                //'标题'    => 'house_title',
            ];
            setlocale(LC_ALL, array('zh_CN.gbk','zh_CN.gb2312','zh_CN.gb18030'));
            //遍历已保存的csv文件,路径如下
            //array(1) {
            // [0]=>
            // string(74) "/data/nginx/html/php_tglj/admin/console/runtime/importcsvbyhouselist/a.csv"
            //}
            foreach($csvList as $csvFile){
                //获取到的文件名(不携带文件后缀),如xian-houselist-ttg-2017-8-9
                $fileName = pathinfo($csvFile,PATHINFO_FILENAME);
                self::$_csvFileGroupDirForHouseDetailTxt = $fileName;
                $csvObj = CSVIterator::load($csvFile,[]);
                $csvRes = $this->_importToCsvAction($csvObj,$csvHead);
                //组合成如:$res['fileList']['a.csv']=['addNums'=>100];
                $res['fileList'][$fileName] = [
                    //处理数据成功数
                    'addNums' => $csvRes['addNums'],
                ];
            }
            setlocale(LC_ALL,NULL);
            //---end

            $res['fileTotal'] = count($csvList);

            $this->_exitOut($res);

        }catch(Exception $e){
            $exceptionInfo = [
                'errorLine'     => $e->getLine(),
                'errorMsg'      => $e->getMessage(),
                'errorFile'     => $e->getFile(),
                'importCsvForeachExceptions' => [],
            ];
            if( !empty(self::$_importCsvForeachExceptions) ){
                $exceptionInfo['importCsvForeachExceptions'] = self::$_importCsvForeachExceptions;
            }
            $this->_exitOut($exceptionInfo);
        }
    }

    //第一步 1.1
    //处理导入的csv文件逻辑
    private function _importToCsvAction(CSVIterator $csvObj,array $csvHead){
        $addNums = 0;

        //遍历csv对象---foreach.start
        foreach ($csvObj as $offsetRow => $row) {

            if( empty($row) ){
                continue;
            }

            //处理字符集
            $row = array_map('console\lib\Common::charsetGb2312ToUtf8', $row);

            //表头处理
            if (0 == $offsetRow) {

                $format = array();
                foreach ($row as $offsetCell => $head) {

                    if (isset($csvHead[$head])) {

                        $format[$offsetCell] = $csvHead[$head];

                    }

                }

                //若上传csv的表头和处理的表头数量不一致，则报错
                if (count($format) != count($csvHead)) {

                    throw new Exception('无法识别表头');
                }

                //设置表头和列值对应，组合成关联数组
                $csvObj->setFormat($format);
                continue;

            }

            $line = $offsetRow+1;

            try{

//                var_dump($row);
//                exit;
                $this->_importToHouseDetailAction($addNums,$row);

                $addNums++;

            }catch(Exception $e){
                self::$_importCsvForeachExceptions[] = array(
                    'content' => $e->getMessage(),
                    'line' => $line ,
                );
                continue;
            }

        }
        //---foreach.end
        if( !empty(self::$_importCsvForeachExceptions) ){
            throw new Exception('throw_importCsvForeachExceptions');
        }

        return [
            'addNums' => $addNums,
        ];
    }

    //第一步 1.2
    //查询数据库的房源详情信息,并将房源ID写入到redis,因为查询数据库,又要加入图片下载操作,怕造成网络阻塞处理.分成2步处理:1.查询房源详情,写入到txt文件中.2.将房源ID放入到redis中
    private function _importToHouseDetailAction($addNums,$row){

        /*
        //输出调试信息
            echo print_r($row,true);
            exit;
            Array
            (
                [house_id] => 1768585
            )
        */
        $houseId = isset($row['house_id']) && !empty($row['house_id']) ? $row['house_id'] : 0;
        if( empty($houseId) ){
            throw new Exception("第{$addNums}行,房源ID不存在");
        }

        //房屋信息
        $houseInfo              = self::_db()->createCommand("SELECT * FROM `house_details` as detail JOIN `house_search` as search ON search.house_id = detail.id WHERE  detail.id = {$houseId}")->queryOne();
        //用户电话-直接获取用户的电话号码值
        //$houseUserMobile        = self::_db()->createCommand("SELECT mobile FROM `user` WHERE id = {$houseInfo['uid']}")->queryScalar();
        //房源图片-列表,以img_url的值组成的数组
        $houseImgList           = self::_db()->createCommand("SELECT img_url FROM `house_img_attr` WHERE house_id  = {$houseId}")->queryColumn();
        //床型信息
        $houseBedList           = self::_db()->createCommand("SELECT * FROM `house_beds` WHERE `house_id`={$houseId}")->queryAll();
        //审核日志表
        $reson                  = self::_db()->createCommand("SELECT *  FROM `house_audit_log` WHERE `house_id`={$houseId}")->queryOne();
        //房源类型
        $houseRoomType          = self::_db()->createCommand("SELECT type_name FROM `dt_house_type` WHERE `id`={$houseInfo['roomtype']}")->queryScalar();
        //室内设施
        $houseFacilitiesList    = self::_db()->createCommand("SELECT dt_house_inside.facilities_in_name FROM `house_facilities_inside` JOIN `dt_house_inside` on house_facilities_inside.inside_id = dt_house_inside.id WHERE house_facilities_inside.house_id = {$houseId}")->queryAll();
        $houseFac = '';
        if ($houseFacilitiesList) {
            foreach ($houseFacilitiesList as $k => $v) {
                if( isset($v['facilities_in_name']) && !empty($v['facilities_in_name']) ){
                    $houseFac .= $v['facilities_in_name'] . ',';
                }
            }
        }
        $houseFac = rtrim($houseFac, ',');
        //室外设施
        $outFacilitiesList      = self::_db()->createCommand("SELECT dt_house_outside.facilities_name FROM `house_facilities_outside` JOIN `dt_house_outside` on house_facilities_outside.outsid_id = dt_house_outside.id WHERE house_facilities_outside.house_id = {$houseId}")->queryAll();
        $outFacilitiesList      = !empty($outFacilitiesList) ? array_unique($outFacilitiesList) : [];
        $outFac = '';
        if ($outFacilitiesList) {
            foreach ($outFacilitiesList as $k => $v) {
                if( isset($v['facilities_name']) && !empty($v['facilities_name']) ){
                    $outFac .= $v['facilities_name'] . ',';
                }
            }
        }
        $outFac = rtrim($outFac, ',');
        //屋内限制
        $houseLimitInfo         = self::_db()->createCommand("SELECT `limit_id` FROM `house_limit` WHERE `house_id`={$houseId}")->queryAll();
        $houseLimitNameStr = '';
        if ($houseLimitInfo) {
            $houseLimitIdArr = [];
            $houseLimitIdStr = '';
            foreach ($houseLimitInfo as $K => $v) {
                if( isset($v['limit_id']) && !empty($v['limit_id']) ){
                    $houseLimitIdArr[] = $v['limit_id'];
                }
            }
            $houseLimitIdStr = implode(',',$houseLimitIdArr);
            $sql = "SELECT `limit_name` FROM `dt_house_limit` WHERE id in({$houseLimitIdStr})";
            $houseLimitNameArr = self::_db()->createCommand($sql)->queryColumn();
            $houseLimitNameStr = implode(',',$houseLimitNameArr);
        }

        //房屋位置
        $houseSearch  = self::_db()->createCommand("select province,city,area,price from `house_search` WHERE  house_id = {$houseId}")->queryOne();
        $province       = CommonService::get_city_name($houseSearch['province']);
        $city           = CommonService::get_city_name($houseSearch['city']);
        $area           = CommonService::get_city_name($houseSearch['area']);
        $price          = $houseSearch['price'];

        //房屋地址
        if( isset($houseInfo['biotope']) && isset($houseInfo['doornum']) ){
            $houseAddress = $province . $city . $area . $houseInfo['biotope'] . $houseInfo['doornum'];
        }else{
            $houseAddress   = $houseInfo['address'];
        }

//基本信息.出租类型-显示处理
$showRoommode = Yii::$app->params['roommode'][$houseInfo['roommode']];

//基本信息.床铺信息-显示处理
$showBedData = '';
foreach($houseBedList as $k=>$v){
$t = $k+1;
$bedType = Yii::$app->params['bed_type'][$v['bed_type']];
$showBedData .= <<<EOF
床铺信息-{$t}:{$bedType},长{$v['bed_long']}米*宽{$v['bed_wide']}米,{$v['bed_count']}张
\r\n
EOF;
}

//基本信息.未通过原因-显示处理
$showReson = '';
if( $houseInfo['status']==3 && !empty($reson)){
$showReson = "未通过原因:{$reson['reson']}{$reson['detail_reson']}";
}

//价格规则.押金-显示处理
$showDeposit = '不收取';
if( $houseInfo['is_deposit']==1 ){
    $showDeposit = "线下押金:{$houseInfo['deposit']}元";
}

//价格规则.清洁费-显示处理
$showCleanFee = !empty($houseInfo['clean_fee']) ? $houseInfo['clean_fee'] : '0';
$showCleanFee .= ' 间/次';

//价格规则.超额费用-显示处理
$showOverFee = !empty($houseInfo['over_fee']) ? $houseInfo['over_fee'] : '0';
$showOverFee .= ' 元/晚';

//价格规则.退款规则-显示处理
$showRefundRule = '';
switch($houseInfo['refund_rule']){
    case 1:
$showRefundRule = "
入住前1天14:00之前申请退款,无条件退款
\r\n
1、要获得全额住宿费用退款，房客必须在入住日期当天前1天14：00前取消预订。例如，如果入住日期是周五，则需在该周周四的14：00之前取消预订
\r\n
2、如果房客在入住日14：00前24小时内取消预订，首晚房费将不可退还
\r\n
3、如果房客已入住但决定提前退房，那么扣除未消费的头一天的房费，其余部分退还给房客";
    break;
    case 2:
$showRefundRule = "
入住前5天14：00点前取消预订可获得全额退款
\r\n
1、要获得住宿费用的全额退款，房客必须在入住日期，前5天14：00前取消预订。例如，如果入住日期是周五，则需在前一个周日的14：00之前取消预订
\r\n
2、如果房客提前不到5天退订，那么首晚房费将不可退还，但剩余的天数将退还50%的房费
\r\n
3、如果房客已入住但决定提前退房，那么扣除未消费的头一天的房费，其余部分50%退还给房客
";
    break;
    case 3:
$showRefundRule = "
入住前1周14：00点前取消预订可获得50%退款\r\n
1、要获得50%的住宿费用退款，房客必须在入住日期，前7天14：00前取消预订，否则不予退款。例如，入住日期是周五，则需在前一个周五的14：00之前取消预订。周四的14：00之前取消预订\r\n
2、如果房客未能在7天前取消预订，未住宿天数的房费将不予退还\r\n
3、如果房客已入住但决定提前退房，剩余天数的房费将不予退还
";
    break;
    case 4:
$showRefundRule = "
房客支付后取消预订将不退还任何费用
\r\n
1、预订成功之后，若要取消预订，将不退还任何费用
";
    break;
}

//入住须知.最多入住天数-显示处理
$showMaxday         = !empty($houseInfo['maxday']) ? $houseInfo['maxday'] : '不限制';

//入住须知.提前预定天数-显示处理
$showBeforeday      = isset($houseInfo['beforeday']) && !empty($houseInfo['beforeday']) ? "{$houseInfo['beforeday']}" : '不限制';

//入住须知.接纳性别-显示处理
$showHouseSex       = @Yii::$app->params['house_sex'][$houseInfo['sex']];

//入住须知.是否接纳外宾-显示处理
$showIsWelcome      = @Yii::$app->params['is_welcome'][$houseInfo['is_welcome']];

//入住须知.禁止行为-显示处理
$showHouseLimitName = !empty($houseLimitNameStr) ? $houseLimitNameStr : '无';

//入住须知.隐藏贴士-显示处理
$showSecretNotice = !empty($houseInfo['secret_notice']) ? $houseInfo['secret_notice'] : '无';

//入住须知.其他房客须知-显示处理
$showNotice = !empty($houseInfo['notice']) ? $houseInfo['notice'] : '无';
$hh = "\r\n\r\n";
$fileContent = <<<EOF
---------------------------基本信息---------------------------
{$hh}
房屋标题:{$houseInfo['title']}
{$hh}
出租类型:{$showRoommode}
{$hh}
房源类型:{$houseRoomType}
{$hh}
房源面积:{$houseInfo['roomsize']}/平米,宜住人数({$houseInfo['minguest']}人),最多入住人数({$houseInfo['maxguest']}人)
{$hh}
户型:{$houseInfo['roomnum']}室,{$houseInfo['officenum']}厅,{$houseInfo['kitchenum']}厨,{$houseInfo['bathnum']}卫,{$houseInfo['balconynum']}阳台
{$hh}
{$showBedData}
{$hh}
同类房源:{$houseInfo['total_stock']} *含此房源（朝向、户型、房间面积相同；家具家电、装修同档的房间）
{$hh}
房屋排序:{$houseInfo['tango_weight']}
{$hh}
所在省:{$province}
{$hh}
所在城市:{$city}
{$hh}
所在区域:{$area}
{$hh}
房屋地址:{$houseAddress}
{$hh}
{$showReson}
{$hh}
---------------------------价格规则---------------------------
{$hh}
价格:{$houseInfo['price']}
{$hh}
押金:{$showDeposit}
{$hh}
清洁费:{$showCleanFee}
{$hh}
超额费用:{$showOverFee}
{$hh}
退款规则:{$showRefundRule}
{$hh}
---------------------------入住须知---------------------------
{$hh}
入住规则:最少入住天数:{$houseInfo['minday']},最多入住天数:{$showMaxday},提前预定天数:{$showBeforeday}
{$hh}
入离时间:最早入住时间:{$houseInfo['intime']}:00,最晚退房时间:{$houseInfo['outtime']}:00
{$hh}
接纳性别:{$showHouseSex}
{$hh}
是否接纳外宾:{$showIsWelcome}
{$hh}
禁止行为(选填):{$showHouseLimitName}
{$hh}
其他费用(选填):对水费、电费、燃气费等其他费用有其他要求进行描述
{$hh}
隐藏贴士(选填):{$showSecretNotice}
{$hh}
其他房客须知(选填):{$showNotice}
{$hh}
---------------------------房屋描述---------------------------
{$hh}
配套设施:{$houseFac}
{$hh}
房源描述:{$houseInfo['introduce']}
{$hh}
周边设施:{$houseInfo['nearby_intro']}
{$hh}
EOF;

        //创建文件并写入房源详情信息
        $this->_createFile($houseId,$fileContent);

        //将首图和其他图片都并入到一起
        array_unshift($houseImgList,$houseInfo['cover_img']);
        //将房源图片列表存储到redis中
        foreach($houseImgList as $k=>&$v){
            $json = json_encode([
                //分组存储图片时所使用到的csv文件名
                'csvFileGroup'  => self::$_csvFileGroupDirForHouseDetailTxt,
                'index'         => $k,
                'houseId'       => $houseId,
                'imgPath'       => $v,
            ]);
            //因一个houseId拥有多个图片,所以在此redis的哈希的key,简化为houseId-0,houseId-1这样的处理方式,防止重复和覆盖
            self::_redis()->hset(self::$_exportHouseDetailImgsRedisKey,$houseId.'-'.$k,$json);
        }

        unset($v);


        //$date_price ---start
//        $date           = HouseDetailsController::getDate(date("Y-m-d", time()), date("Y-m-d", time() + 3600 * 24 * 180));
//        $tmp            = [];
//        $special_price  = self::_db()->createCommand("select * from `house_special_price` WHERE house_id = {$houseId}")->queryAll();
//        $week_price     = self::_db()->createCommand("select * from `house_week_price` WHERE house_id = {$houseId} AND is_delete = 0 ")->queryAll();
//        foreach ($date as $k => $v) {
//            $tmp[$v] = $price;
//        }
//        if ($week_price) {
//            foreach ($tmp as $kk => $vv) {
//                foreach ($week_price as $k => $v) {
//                    $week_num = date('N', strtotime($kk));
//                    if ($week_num == 7) {
//                        $week_num = 0;
//                    }
//                    if ($week_num == $v['weekday']) {
//                        $tmp[$kk] = $v['price'];
//                    }
//                }
//            }
//        }
//
//        if ($special_price) {
//            foreach ($tmp as $kkk => $vvv) {
//                foreach ($special_price as $kkkk => $vvvv) {
//                    if ($kkk == $vvvv['price_date']) {
//                        $tmp[$kkk] = $vvvv['price'];
//                    }
//                }
//            }
//        }
//        $date_price = $tmp;
//        unset($tmp);
        //$date_price ---end

    }

    //创建文件
    private function _createFile($fileName,$str){
        $filePathArr = [
            'house_detail_',
            $fileName,
            '.txt'
        ];
        $dirPathArr = [
            'house_detail_txt',
            self::$_csvFileGroupDirForHouseDetailTxt,
        ];
        $dirPath = implode('/',$dirPathArr);
        $file = self::_houseCsvSaveDirPath($dirPath).implode('',$filePathArr);
//        echo $file;
//输出如下存储地址:
//  /data/nginx/html/php_tglj/admin/console/runtime/importcsvbyhouselist/house_detail_txt/xian-houselist-ttg-2017-8-9/house_detail_1768585.txt
//        exit;
        echo $file."\r\n";

        //覆盖写
        @file_put_contents($file,$str);
    }

    //若是有错误则在此提示并退出
    private function _exitOut($info){
        echo var_export($info,true);
        exit("\n");
    }

    //第二步 2.0
    //导出房源图片
    //命令行调用示例: /data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/exporthousedetailimgs
    /**
     * @param string $csvFileName 要针对某个csv文件的房源图片处理
     */
    public function actionExporthousedetailimgs($csvFileName=''){
        $res = [
            'total'         => 0,
            'success'       => 0,
            'error'         => 0,
            'errorList'     => [],
        ];
        if( !empty($csvFileName) ){
            self::$_exportHouseDetailImgsRedisKey .= "-{$csvFileName}";
        }

        //获取所有redis.hash中的房源ID
        $hashKeyList = self::_redis()->hkeys(self::$_exportHouseDetailImgsRedisKey);
        foreach($hashKeyList as $hashKey){
            $res['total']++;
            $json   = self::_redis()->hget(self::$_exportHouseDetailImgsRedisKey,$hashKey);
            $arr    = json_decode($json,true);
//$this->_exitOut($arr);
//输出$arr的效果结果如下:
//            array (
//                'csvFileGroup' => 'xian_houselist_ttg_2017_8_9',
//                'index' => 5,
//                'houseId' => '1692503-0',
//                'imgPath' => 'house_210048_1483275445150.png',
//            )

            $dirPathArr = [
                'house_detail_img',
                $arr['csvFileGroup'],
                $arr['houseId'],
            ];
            $dirPath = implode('/',$dirPathArr);
            $saveDirPath = self::_houseCsvSaveDirPath($dirPath);

            $imgUrl = "http://img.tgljweb.com/{$arr['imgPath']}";
            //若返回fileName成功
            $fileName = $this->_downFile($imgUrl,$saveDirPath);
            if( !empty($fileName) ){
                $res['success']++;
                echo $fileName."\r\n";
                //文件处理成功同时删除redis中相关的key
                self::_redis()->hdel(self::$_exportHouseDetailImgsRedisKey,$hashKey);
            }else{
                $res['error']++;
                $res['errorList'][] = [
                    'houseId'   => $arr['houseId'],
                    'imgUrl'    => $imgUrl,
                ];
            }
        }
        $this->_exitOut($res);
    }

    /**
     * CURL下载文件 成功返回文件名，失败返回false
     * @param $url
     * @param string $savePath
     * @return bool|string
     * @author Zou Yiliang
     */
    private function _downFile($url, $savePath){
        //$url = 'http://www.baidu.com/img/bdlogo.png';
        /*
        HTTP/1.1 200 OK
        Connection: close
        Content-Type: image/jpeg
        Content-disposition: attachment; filename="cK4q4fLsp7YOlaqxluDOafB.jpg"
        Date: Sun, 18 Jan 2015 16:56:32 GMT
        Cache-Control: no-cache, must-revalidate
        Content-Length: 963704
        */

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

        curl_setopt($ch, CURLOPT_HEADER, TRUE);    //需要response header
        curl_setopt($ch, CURLOPT_NOBODY, FALSE);    //需要response body

        $response = curl_exec($ch);

        //分离header与body
        $header = '';
        $body = '';
        if (curl_getinfo($ch, CURLINFO_HTTP_CODE) == '200') {
            $headerSize = curl_getinfo($ch, CURLINFO_HEADER_SIZE); //头信息size
            $header = substr($response, 0, $headerSize);
            $body = substr($response, $headerSize);
        }

        curl_close($ch);

        //文件名
        $arr = array();
        if (preg_match('/filename="(.*?)"/', $header, $arr)) {

            $file = $arr[1];
            $fullName = rtrim($savePath, '/') . '/' . $file;

            //创建目录并设置权限
            $basePath = dirname($fullName);
            if (!file_exists($basePath)) {
                @mkdir($basePath, 0777, true);
                @chmod($basePath, 0777);
            }

            if (file_put_contents($fullName, $body)) {
                return $file;
            }
        }

        return false;
    }

    //自定义参数导出
    //命令行调用:/data/php/bin/php /data/nginx/html/php_tglj/admin/yii.php houselistdetailexport/diyexport
    public function actionDiyexport($id='test'){
        echo $id;
    }
}